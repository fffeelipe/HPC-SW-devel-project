@startuml TranssiApp component diagram

node Transsiapp_public{
    package frontend <<React>>  {

        component login {
            port " " as f_login
        }
        component mass_transit_metrics{
            port " " as p1
        }
        component app_based_transit_metrics{
            port " " as p3
        }
    }
}

cloud external_providers{
    [bikeme]
    [ATM]
    [mobike]
    [blablacar]
    [Timetable_management_software]


}

node legacy_sensors {
    component legacy_sensor {
        port " " as legacy_port2
    }
    legacy_port2 -l-() publish_data
    port " " as legacy_port
    publish_data -- legacy_port
}

node transsiapp_internal{
    port " " as p_internal_auth
    port " " as p_internal_report
    port " " as p_internal_store
    port " " as p_internal_data

    component authentication    {
        port " " as p6
    }
    component transiapp_core{
        port " " as p7
        port " " as store_report_1
        port " " as core_report
    }
    component data_ingress{
        port " " as p8
    }
    component analytics_engine{
        port " " as p9
    }

    circle auth as u1
    u1 -u- p_internal_auth
    p6 -u- u1

    circle generate_report as u2
    u2 -- p_internal_report
    p7 -u- u2

    circle store_report as u3
    u3 -- p_internal_store
    store_report_1 -u- u3

    circle receive_data as u4
    u4 -- p_internal_data
    u4 -- p8

    p9 -r-() data_analysis
    core_report -r-( data_analysis

}

p_internal_report -u-() generate_report
p1 -d-( generate_report
p3 -d-( generate_report
f_login -d-( authenticate
legacy_port -u-( receive_data
external_providers --() receive_data
p_internal_auth -u-() authenticate
p_internal_store -u-() store_report
p_internal_data -u-() receive_data
Transsiapp_public --( store_report
@enduml
